"""add bank statement tables

Revision ID: e2d8e37c1018
Revises: 11896c7a54a7
Create Date: 2025-05-26 22:12:57.075424

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'e2d8e37c1018'
down_revision: Union[str, None] = '11896c7a54a7'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('bank_categories',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.Enum('HOUSING', 'TRANSPORTATION', 'FOOD_DINING', 'ENTERTAINMENT', 'SHOPPING', 'UTILITIES', 'HEALTH_MEDICAL', 'PERSONAL_CARE', 'EDUCATION', 'TRAVEL', 'GIFTS_DONATIONS', 'INCOME', 'INVESTMENTS', 'SAVINGS', 'OTHER', name='transactioncategoryenum'), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('bank_tags',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('bank_statements',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_bank_statements_title'), 'bank_statements', ['title'], unique=False)
    op.create_table('bank_statement_metadata',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('statement_id', sa.UUID(), nullable=True),
    sa.Column('account_number', sa.String(), nullable=True),
    sa.Column('account_holder', sa.String(), nullable=True),
    sa.Column('bank_name', sa.String(), nullable=True),
    sa.Column('statement_period', sa.String(), nullable=True),
    sa.Column('opening_balance', sa.Float(), nullable=True),
    sa.Column('closing_balance', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['statement_id'], ['bank_statements.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('statement_id')
    )
    op.create_table('bank_transactions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('statement_id', sa.UUID(), nullable=True),
    sa.Column('date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('balance', sa.Float(), nullable=True),
    sa.Column('transaction_type', sa.String(), nullable=True),
    sa.Column('category_id', sa.UUID(), nullable=True),
    sa.Column('reference_number', sa.String(), nullable=True),
    sa.Column('evidence', sa.Text(), nullable=False),
    sa.Column('is_recurring', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['bank_categories.id'], ),
    sa.ForeignKeyConstraint(['statement_id'], ['bank_statements.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('bank_transaction_tags',
    sa.Column('transaction_id', sa.UUID(), nullable=False),
    sa.Column('tag_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['tag_id'], ['bank_tags.id'], ),
    sa.ForeignKeyConstraint(['transaction_id'], ['bank_transactions.id'], ),
    sa.PrimaryKeyConstraint('transaction_id', 'tag_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('bank_transaction_tags')
    op.drop_table('bank_transactions')
    op.drop_table('bank_statement_metadata')
    op.drop_index(op.f('ix_bank_statements_title'), table_name='bank_statements')
    op.drop_table('bank_statements')
    op.drop_table('bank_tags')
    op.drop_table('bank_categories')
    # ### end Alembic commands ###
