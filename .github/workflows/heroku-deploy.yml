name: Deploy FastAPI to Heroku

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run tests
      run: |
        python -m pytest tests/ -v
      continue-on-error: false

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Deploy to Heroku
      uses: akhileshns/heroku-deploy@v3.12.14
      with:
        heroku_api_key: ${{secrets.HEROKU_API_KEY}}
        heroku_app_name: ${{secrets.HEROKU_APP_NAME}}
        heroku_email: ${{secrets.HEROKU_EMAIL}}
        
    # Alternative deployment method using Heroku CLI
    # - name: Deploy using Heroku CLI
    #   run: |
    #     curl https://cli-assets.heroku.com/install.sh | sh
    #     echo "machine api.heroku.com login ${{secrets.HEROKU_EMAIL}} password ${{secrets.HEROKU_API_KEY}}" > ~/.netrc
    #     echo "machine git.heroku.com login ${{secrets.HEROKU_EMAIL}} password ${{secrets.HEROKU_API_KEY}}" >> ~/.netrc
    #     heroku git:remote -a ${{secrets.HEROKU_APP_NAME}}
    #     git push heroku main

  notify:
    needs: [test, deploy]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: Notify deployment status
      run: |
        if [ "${{ needs.deploy.result }}" == "success" ]; then
          echo "✅ Deployment successful!"
        else
          echo "❌ Deployment failed!"
        fi